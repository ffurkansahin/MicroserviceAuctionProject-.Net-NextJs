services:
  postgresDb:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: PostgresPW
      POSTGRES_DB: Auctions
    ports:
      - 5432:5432
    volumes:
      - postgresdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  mongoDb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=MongoPW
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "127.0.0.1/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  rabbitMq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5
  auction-svc:
    image: furkansahinn/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitMq
      - ConnectionStrings__AuctionDbConString=Server=postgresDb;Port=5432;Database=Auctions;User Id=postgres;Password=PostgresPW;
      - IdentityServiceUrl=http://identity-svc
    ports:
      - "7001:80"
    depends_on:
      postgresDb:
        condition: service_healthy
      rabbitMq:
        condition: service_healthy
  search-svc:
    image: furkansahinn/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitMq
      - ConnectionStrings__MongoDbConString=mongodb://mongo:MongoPW@mongoDb
      - AuctionServiceUrl=http://auction-svc/
    ports:
      - "7002:80"
    depends_on:
      mongoDb:
        condition: service_healthy
      rabbitMq:
        condition: service_healthy
  identity-svc:
    image: furkansahinn/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgresDb;Port=5432;Database=Identity;User Id=postgres;Password=PostgresPW;
    ports:
      - "5001:80"
    depends_on:
      postgresDb:
        condition: service_healthy
  gateway-svc:
    image: furkansahinn/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6001:80"
volumes:
  mongodata:
  postgresdata: